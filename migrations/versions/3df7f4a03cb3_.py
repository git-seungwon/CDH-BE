"""empty message

Revision ID: 3df7f4a03cb3
Revises: 9094b79e2b4b
Create Date: 2024-11-23 00:32:34.276431

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '3df7f4a03cb3'
down_revision: Union[str, None] = '9094b79e2b4b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('admin_info', 'created_at',
               existing_type=mysql.DATETIME(),
               type_=sa.TIMESTAMP(),
               nullable=True,
               existing_comment='계정 생성 시각')
    op.alter_column('admin_logs', 'created_at',
               existing_type=mysql.DATETIME(),
               type_=sa.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('agreement', 'create_at',
               existing_type=mysql.DATETIME(),
               type_=sa.TIMESTAMP(),
               existing_comment='생성 시각',
               existing_nullable=False)
    op.add_column('api', sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False, comment='자동'))
    op.add_column('api', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('api', 'api_id',
               existing_type=mysql.INTEGER(),
               comment=None,
               existing_comment='API 명세서 고유 아이디',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('api', 'title',
               existing_type=mysql.VARCHAR(length=100),
               comment=None,
               existing_comment='노트 제목',
               existing_nullable=True)
    op.create_unique_constraint(None, 'api', ['note_id'])
    op.drop_column('api', 'content')
    op.drop_column('api', 'update_at')
    op.alter_column('calenders', 'create_at',
               existing_type=mysql.DATETIME(),
               type_=sa.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('erd', 'created_at',
               existing_type=mysql.DATETIME(),
               type_=sa.TIMESTAMP(),
               comment=None,
               existing_comment='자동',
               existing_nullable=False)
    op.create_unique_constraint(None, 'erd', ['note_id'])
    op.alter_column('login_log', 'login_at',
               existing_type=mysql.DATETIME(),
               type_=sa.TIMESTAMP(),
               existing_comment='로그인 시각',
               existing_nullable=False)
    op.alter_column('notes', 'created_at',
               existing_type=mysql.DATETIME(),
               type_=sa.TIMESTAMP(),
               nullable=True,
               comment=None,
               existing_comment='자동')
    op.alter_column('sign_up_log', 'sign_up_datetime',
               existing_type=mysql.DATETIME(),
               type_=sa.TIMESTAMP(),
               existing_comment='회원 가입 일시',
               existing_nullable=False)
    op.alter_column('user_info', 'created_at',
               existing_type=mysql.DATETIME(),
               type_=sa.TIMESTAMP(),
               existing_comment='자동',
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_info', 'created_at',
               existing_type=sa.TIMESTAMP(),
               type_=mysql.DATETIME(),
               existing_comment='자동',
               existing_nullable=False)
    op.alter_column('sign_up_log', 'sign_up_datetime',
               existing_type=sa.TIMESTAMP(),
               type_=mysql.DATETIME(),
               existing_comment='회원 가입 일시',
               existing_nullable=False)
    op.alter_column('notes', 'created_at',
               existing_type=sa.TIMESTAMP(),
               type_=mysql.DATETIME(),
               nullable=False,
               comment='자동')
    op.alter_column('login_log', 'login_at',
               existing_type=sa.TIMESTAMP(),
               type_=mysql.DATETIME(),
               existing_comment='로그인 시각',
               existing_nullable=False)
    op.drop_constraint(None, 'erd', type_='unique')
    op.alter_column('erd', 'created_at',
               existing_type=sa.TIMESTAMP(),
               type_=mysql.DATETIME(),
               comment='자동',
               existing_nullable=False)
    op.alter_column('calenders', 'create_at',
               existing_type=sa.TIMESTAMP(),
               type_=mysql.DATETIME(),
               existing_nullable=False)
    op.add_column('api', sa.Column('update_at', mysql.DATETIME(), nullable=False, comment='문서 생성 시각'))
    op.add_column('api', sa.Column('content', mysql.TEXT(), nullable=True, comment='내용'))
    op.drop_constraint(None, 'api', type_='unique')
    op.alter_column('api', 'title',
               existing_type=mysql.VARCHAR(length=100),
               comment='노트 제목',
               existing_nullable=True)
    op.alter_column('api', 'api_id',
               existing_type=mysql.INTEGER(),
               comment='API 명세서 고유 아이디',
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('api', 'updated_at')
    op.drop_column('api', 'created_at')
    op.alter_column('agreement', 'create_at',
               existing_type=sa.TIMESTAMP(),
               type_=mysql.DATETIME(),
               existing_comment='생성 시각',
               existing_nullable=False)
    op.alter_column('admin_logs', 'created_at',
               existing_type=sa.TIMESTAMP(),
               type_=mysql.DATETIME(),
               existing_nullable=False)
    op.alter_column('admin_info', 'created_at',
               existing_type=sa.TIMESTAMP(),
               type_=mysql.DATETIME(),
               nullable=False,
               existing_comment='계정 생성 시각')
    # ### end Alembic commands ###
